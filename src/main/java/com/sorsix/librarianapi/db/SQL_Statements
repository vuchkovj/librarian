insert into users (id, address, first_name, last_name, username)
values (1, 'Winterfell BB', 'John', 'Snow', 'jsnow'),
       (2, 'Winterfell BB', 'Arya', 'Stark', 'astark'),
       (3, 'Casterly Rock', 'Tyrion', 'Lannister', 'tyrion'),
       (4, 'Dragonstone', 'Daenerys', 'Targaryen', 'khaleesi'),
       (5, 'Westerlands', 'Sandor', 'Clegane', 'thehound');

insert into authors (id, biography, name)
values (1, 'LT', 'Leo Tolstoy'),
       (2, 'MDS', 'Miguel de Cervantes'),
       (3, 'WS', 'William Shakespeare'),
       (4, 'EH', 'Ernest Hemingway');

insert into genres (id, name)
values (1, 'Novel'),
       (2, 'Drama'),
       (3, 'Tragedy');

insert into catalog_books (id, title, author_id, genre_id)
values (1, 'For Whom The Bell Tolls', 4, 1),
       (2, 'Hamlet', 3, 2),
       (3, 'War and Peace', 1, 1),
       (4, 'Don Quixote', 2, 1);

insert into inventory_books (inventory_number, catalog_book_id)
values (100, 1),
       (101, 1),
       (102, 2),
       (200, 2),
       (201, 2),
       (202, 2),
       (300, 3),
       (301, 3),
       (302, 3),
       (400, 4),
       (401, 4),
       (402, 4);

insert into leases (returned, inventory_book_number, user_id)
values (false, 100, 1),
       (false, 200, 1),
       (false, 302, 2),
       (true, 300, 1);

-- Find all available books from inventory
create view available_books_from_inventory as
select ib.inventory_number, ib.catalog_book_id
from inventory_books ib
where ib.inventory_number not in (
    select l.inventory_book_number
    from leases l
    where l.returned = false
);

create view v_catalog_books as
select distinct cb.id,
                cb.title,
                cb.author_id,
                cb.genre_id,
                cb.summary,
                case when ab.inventory_number is not null then true else false end as available
from catalog_books cb
         left join available_books_from_inventory ab on cb.id = ab.catalog_book_id;